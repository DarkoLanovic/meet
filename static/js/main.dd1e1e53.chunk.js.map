{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","react_default","a","createElement","className","Component","EventList","events","this","props","map","event","key","id","src_Event","CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","_this","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","_this2","type","onChange","onFocus","style","display","onClick","NumberOfEvents","updateNumberOfEvents","udateEvent","mockData","kind","etag","timeZone","description","summary","extractLocations","Object","toConsumableArray","Set","getEvents","_ref","asyncToGenerator","regenerator_default","mark","_callee","token","url","result","wrap","_context","prev","next","NProgress","start","window","href","startsWith","abrupt","getAccessToken","sent","removeQuery","axios","get","data","localStorage","setItem","JSON","stringify","done","stop","apply","arguments","history","pushState","pathname","newurl","protocol","host","checkToken","_ref2","_callee2","accessToken","_context2","fetch","concat","then","res","json","catch","error","_x","getToken","_ref3","_callee3","code","encodeCode","_yield$fetch$then$cat","access_token","_context3","encodeURIComponent","_x2","_ref4","_callee4","tokenCheck","searchParams","results","authUrl","_context4","getItem","t0","removeItem","URLSearchParams","search","App","locationEvents","mounted","src_CitySearch","src_NumberOfEvents","src_EventList","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.dd1e1e53.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  render() {\n    return (\n      <div>\n        <p className=\"summary\"></p>\n        <p className=\"start-date\"></p>\n        <p className=\"location\"></p>\n        <p className=\"description\"></p>\n        <p className=\"show-details-btn\"></p>\n        <p className=\"hide-details-btn\"></p>\n      </div>\n    );\n  }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    // Rendering a list of events inside the EventList's render() method in “src/EventList.js” using the events prop\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event => (\n          <li key={event.id}> \n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );      \n  }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\n\nclass CitySearch extends Component {\n  \n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined\n  }\n\n  // \"Event hendler function\" for <input> for the <change> event\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input \n          className=\"city\"\n          type=\"text\"  \n          value={this.state.query } \n          // Event listener \n          onChange={this.handleInputChanged }         \n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        \n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n          {this.state.suggestions.map((suggestion) => (\n            <li \n              key={suggestion} \n              onClick={() => this.handleItemClicked(suggestion) }> {suggestion} </li>\n          ))}\n          <li onClick={() => this.handleItemClicked('all') }>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from \"react\";\n\n\nclass NumberOfEvents extends Component {\n  state = {\n    query: 32,\n  }\n\n  updateNumberOfEvents = (event) => {\n    const value = event.target.value\n    this.props.udateEvent(null, value);\n    if(value < 1 || value > 32) {\n      this.setState({\n        query: value,\n      })\n    } else {\n      return this.setState({\n        query: value,\n      })\n    }\n    \n  }\n  \n  render() {\n    return( \n      <div>\n          <p>Number of events:</p>\n          <input \n            type=\"number\"\n            className=\"numberOfEvents\"\n            value={this.state.query}\n            onChange={this.updateNumberOfEvents}\n          />\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"p3308h454qfgum0g\"',\n    id: \"f86ad0s89f6asdf0as5d6\",\n    location: \"Los Angeles, CA\",\n    timeZone: \"Los Angeles/US\",\n    description: \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    summary: \"Learn JavaScript\"\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"fds89a7f80as7df089asf\",\n    location: \"Berlin, Germany\",\n    timeZone: \"Europe/Berlin\",\n    description: \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    summary: \"Learn JavaScript\"\n  },\n];\n  \n  export { mockData };\n\n\n\n\n\n// {\n//     \"kind\": \"calendar#events\",\n//     \"etag\": \"\\\"p3308h454qfgum0g\\\"\",\n//     \"summary\": \"fullstackwebdev@careerfoundry.com\",\n//     \"updated\": \"2020-09-11T17:42:14.056Z\",\n//     \"timeZone\": \"Europe/Berlin\",\n//     \"accessRole\": \"reader\",\n//     \"defaultReminders\": [],\n//     \"nextPageToken\": \"EjYKKzZjbzBvamwwbDBqMHJiaDNnNTZ2bGMyczlpXzIwMjAwODEyVDAxMDAwMFoYgNikkdaU6wIiBwgFELD9zh0=\",\n//     \"items\": [\n//      {\n//       \"kind\": \"calendar#event\",\n//       \"etag\": \"\\\"3181161784712000\\\"\",\n//       \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n//       \"status\": \"confirmed\",\n//       \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n//       \"created\": \"2020-05-19T19:17:46.000Z\",\n//       \"updated\": \"2020-05-27T12:01:32.356Z\",\n//       \"summary\": \"Learn JavaScript\",\n//       \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n//       \"location\": \"London, UK\",\n//       \"creator\": {\n//        \"email\": \"fullstackwebdev@careerfoundry.com\",\n//        \"self\": true\n//       },\n//       \"organizer\": {\n//        \"email\": \"fullstackwebdev@careerfoundry.com\",\n//        \"self\": true\n//       },\n//       \"start\": {\n//        \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n//        \"timeZone\": \"Europe/Berlin\"\n//       },\n//       \"end\": {\n//        \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n//        \"timeZone\": \"Europe/Berlin\"\n//       },\n//       \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n//       \"originalStartTime\": {\n//        \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n//        \"timeZone\": \"Europe/Berlin\"\n//       },\n//       \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n//       \"sequence\": 0,\n//       \"reminders\": {\n//        \"useDefault\": true\n//       },\n//       \"eventType\": \"default\"\n//      },\n//     ]\n// }\n    ","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';  \n\n// use this to handle your API calls\n\n/**\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\n\nexport const getEvents = async () => {\n  NProgress.start();\n  \n  // return the mock data to localhost\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockData;\n  }\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = 'https://06oxy5ugn2.execute-api.us-east-1.amazonaws.com/dev/api/get-events' + '/' + token;   \n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    \n    NProgress.done();\n    \n    return result.data.events;\n  }\n};\n\n\n// This is the function that will remove the code from the URL once you’re finished with it\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname)\n  {\n    // checks is there a paht and then build the URL with curent path\n    var newurl = window.location.protocol + \n    \"//\" + \n    window.location.host + \n    window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    // build the URL without a path using \"window.history.pushState()\"\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\n\n// This function takes the \"accessToken\" you found and checks whether it’s a valid token or not\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\n\n// This function takes your code and encodes it using \"encodeURIComponent \n// then uses the encoded code to get your token.\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://06oxy5ugn2.execute-api.us-east-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n\n}\n\n\nexport const getAccessToken = async () => {\n  // trying to retrive access token by looking in the localStorage\n  const accessToken = localStorage.getItem('access_token');\n  // checking whether an access-token was found.\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      // user is automatically redirected to the Google Authorization screen\n      // where they can sign in and receive their code\n      const results = await axios.get(\n        \"https://06oxy5ugn2.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n        );\n        const { authUrl } = results.data;\n        return (window.location.href = authUrl);\n      }\n      return code && getToken(code);\n    }\n    return accessToken;\n}\n\n\n\n","import React, { Component } from 'react';\nimport './nprogress.css';\nimport './App.css';\nimport EventList from './EventList'; \nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\n\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n  }\n\n  // to load events when the app loads - to make the API call and save inital data to state (?)\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n      this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  // Method that changes the events state\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n\n  render() {\n    return (\n      // This displays all the components within the App div\n      <div className=\"App\">\n         {/* Pass the \"locations\" and \"updateEvents\" to CitySearch as a prop  */}\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        \n        <NumberOfEvents />\n        \n        {/* Pass the state to EventList as a prop of events */}\n        <EventList events={this.state.events} /> \n       \n      </div>\n    );\n  } \n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}